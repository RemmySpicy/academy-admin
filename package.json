{
  "name": "academy-admin",
  "version": "1.0.0",
  "description": "Academy Management System with multi-app development support",
  "private": true,
  "workspaces": [
    "frontend",
    "apps/admin-dashboard",
    "apps/academy-instructors-app",
    "apps/academy-students-app"
  ],
  "scripts": {
    "dev": "docker-compose up",
    "dev:local": "./start-dev.sh",
    "setup:local": "./setup-local-db.sh",
    "frontend:dev": "cd frontend && npm run dev",
    "backend:dev": "cd backend && python3 -m uvicorn app.main:app --reload --port 8000",
    "frontend:build": "cd frontend && npm run build",
    "frontend:start": "cd frontend && npm run start",
    "backend:start": "cd backend && python3 -m uvicorn app.main:app --port 8000",
    "backend:prod": "cd backend && python3 -m uvicorn app.main:app --host 0.0.0.0 --port 8000",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "docker:logs": "docker-compose logs -f",
    "docker:backend": "docker-compose up backend",
    "docker:frontend": "docker-compose up frontend",
    "db:local:up": "docker-compose -f docker-compose.local.yml up -d",
    "db:local:down": "docker-compose -f docker-compose.local.yml down",
    "db:local:logs": "docker-compose -f docker-compose.local.yml logs -f",
    "install:all": "npm install && npm run install:frontend && npm run install:backend && npm run install:mobile",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && pip install -r requirements.txt",
    "install:mobile": "npm run install:instructor && npm run install:student",
    "install:instructor": "cd apps/academy-instructors-app && npm install",
    "install:student": "cd apps/academy-students-app && npm install",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "format:frontend": "cd frontend && npm run format",
    "format:frontend:check": "cd frontend && npm run format:check",
    "lint:backend": "cd backend && flake8 app tests",
    "format:backend": "cd backend && black app tests && isort app tests",
    "format:backend:check": "cd backend && black --check app tests && isort --check-only app tests",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && mypy app",
    "type-check:all": "npm run type-check:frontend && npm run type-check:backend",
    "test:backend": "cd backend && python3 -m pytest",
    "test:backend:watch": "cd backend && python3 -m pytest --ff -x",
    "test:backend:coverage": "cd backend && python3 -m pytest --cov=app --cov-report=html",
    "test:frontend": "cd frontend && npm run test",
    "test:frontend:watch": "cd frontend && npm run test:watch",
    "test:frontend:coverage": "cd frontend && npm run test:coverage",
    "test:e2e": "cd frontend && npm run test:e2e",
    "test:all": "npm run test:backend && npm run test:frontend",
    "build:all": "npm run frontend:build",
    "build:prod": "NODE_ENV=production npm run frontend:build",
    "clean": "npm run clean:frontend && npm run clean:backend",
    "clean:frontend": "cd frontend && rm -rf .next node_modules coverage",
    "clean:backend": "cd backend && rm -rf __pycache__ .pytest_cache htmlcov .coverage",
    "db:migrate": "cd backend && python3 -m alembic upgrade head",
    "db:migrate:down": "cd backend && python3 -m alembic downgrade -1",
    "db:migrate:create": "cd backend && python3 -m alembic revision --autogenerate -m",
    "db:reset": "cd backend && python3 -m alembic downgrade base && python3 -m alembic upgrade head",
    "db:seed": "cd backend && python3 ../database/seeders/run_all.py",
    "db:setup": "python3 database/production_setup.py",
    "setup:dev": "cp .env.example .env && cp backend/.env.example backend/.env && cp frontend/.env.example frontend/.env.local",
    "setup:prod": "cp backend/.env.production backend/.env && cp frontend/.env.production frontend/.env.local",
    "setup:project": "npm run setup:dev && npm run install:all",
    "quality:frontend": "npm run lint:frontend && npm run type-check:frontend && npm run format:frontend:check",
    "quality:backend": "npm run lint:backend && npm run type-check:backend && npm run format:backend:check",
    "quality:all": "npm run quality:frontend && npm run quality:backend",
    "quality:fix": "npm run lint:frontend:fix && npm run format:frontend && npm run format:backend",
    "quality:academy": "python3 tools/code_quality/run_all_checks.py",
    "quality:academy:fix": "python3 tools/code_quality/run_all_checks.py --fix",
    "quality:academy:reports": "python3 tools/code_quality/run_all_checks.py --generate-reports",
    "quality:academy:ci": "python3 tools/code_quality/run_all_checks.py --ci",
    "security:scan": "python3 tools/code_quality/security_scanner.py --scan-all",
    "security:scan:report": "python3 tools/code_quality/security_scanner.py --scan-all --report-format json --output reports/security_scan.json",
    "program-context:lint": "python3 tools/code_quality/program_context_linter.py --check-all",
    "program-context:lint:json": "python3 tools/code_quality/program_context_linter.py --check-all --json",
    "test:coverage:program-context": "python3 tools/code_quality/test_coverage_checker.py --check-all",
    "test:coverage:generate": "python3 tools/code_quality/test_coverage_checker.py --check-all --generate-missing-tests",
    "deploy:check": "npm run quality:all && npm run test:all && npm run quality:academy:ci",
    "deploy:build": "npm run clean && npm run install:all && npm run deploy:check && npm run build:prod",
    "create:feature": "python3 scripts/create-feature-spec.py",
    "generate:feature": "python3 tools/generators/generate_feature.py",
    "generate:backend": "python3 tools/generators/service_template.py",
    "generate:frontend": "python3 tools/generators/frontend_template.py",
    "dev:all": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\" \"npm run dev:instructor\" \"npm run dev:student\"",
    "dev:instructor": "cd apps/academy-instructors-app && npm start",
    "dev:student": "cd apps/academy-students-app && npm start",
    "dev:admin": "npm run frontend:dev",
    "build:all": "npm run frontend:build && npm run build:mobile",
    "build:mobile": "npm run build:instructor && npm run build:student",
    "build:instructor": "cd apps/academy-instructors-app && expo build",
    "build:student": "cd apps/academy-students-app && expo build",
    "test:mobile": "npm run test:instructor && npm run test:student",
    "test:instructor": "cd apps/academy-instructors-app && npm test",
    "test:student": "cd apps/academy-students-app && npm test",
    "subtree:setup": "./scripts/subtree-commands.sh setup-remotes",
    "subtree:add": "./scripts/subtree-commands.sh add-subtrees",
    "subtree:push": "./scripts/subtree-commands.sh push-all",
    "subtree:pull": "./scripts/subtree-commands.sh pull-all",
    "subtree:push:instructor": "./scripts/subtree-commands.sh push-instructor",
    "subtree:pull:instructor": "./scripts/subtree-commands.sh pull-instructor",
    "subtree:push:student": "./scripts/subtree-commands.sh push-student",
    "subtree:pull:student": "./scripts/subtree-commands.sh pull-student",
    "subtree:sync": "./scripts/subtree-commands.sh sync-shared",
    "subtree:status": "./scripts/subtree-commands.sh status",
    "subtree:force-push": "./scripts/subtree-commands.sh force-push-all",
    "mobile:setup": "npm run install:mobile && npm run subtree:sync",
    "mobile:dev": "concurrently \"npm run dev:instructor\" \"npm run dev:student\"",
    "mobile:build": "npm run build:mobile",
    "mobile:test": "npm run test:mobile",
    "mobile:deploy": "npm run subtree:sync && npm run mobile:build && npm run subtree:push"
  },
  "keywords": ["academy", "admin", "nextjs", "fastapi", "typescript", "python", "react-native", "mobile", "multi-app"],
  "author": "Academy Admin Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/academy-admin.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/academy-admin/issues"
  },
  "homepage": "https://github.com/your-org/academy-admin#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "devDependencies": {
    "concurrently": "^9.1.0"
  }
}