version: '3.8'

# Production Docker Compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  postgres:
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    # Remove port mapping for security
    ports: []

  redis:
    restart: always
    volumes:
      - redis_prod_data:/data
    # Remove port mapping for security
    ports: []

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENABLE_DOCS=false
      - ENABLE_ADMIN_OVERRIDE=false
    # Remove volume mapping for security
    volumes: []
    command: >
      sh -c "
        python -m alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NODE_ENV=production
      - NEXT_PUBLIC_DEBUG=false
    # Remove volume mapping for security
    volumes: []
    command: npm start

  # Nginx Reverse Proxy for Production
  nginx:
    image: nginx:alpine
    container_name: academy_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./ssl:/etc/ssl/certs
    depends_on:
      - backend
      - frontend

  # Remove development tools
  adminer:
    profiles:
      - dev-tools

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local