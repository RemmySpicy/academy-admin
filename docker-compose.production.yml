version: '3.8'

services:
  # Frontend Production
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: academy_frontend_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://your-backend-domain.com
      - NEXT_PUBLIC_APP_URL=https://your-frontend-domain.com
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - academy_network

  # Backend Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: academy_backend_prod
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://username:password@external-db-host:5432/database
      - SECRET_KEY=your-production-secret-key
      - CORS_ORIGINS=https://your-frontend-domain.com
      - DEBUG=false
      - ENABLE_DOCS=false
    ports:
      - "8000:8000"
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - academy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: academy_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - academy_network

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  academy_network:
    driver: bridge