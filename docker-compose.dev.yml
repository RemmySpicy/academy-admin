# Docker Compose override for development with auto-restart capabilities
version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development  # Use development stage if available
    volumes:
      # Mount source code for hot reload
      - ./frontend/src:/app/src:cached
      - ./frontend/public:/app/public:cached
      - ./frontend/package.json:/app/package.json:cached
      - ./frontend/package-lock.json:/app/package-lock.json:cached
      - ./frontend/next.config.js:/app/next.config.js:cached
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:cached
      - ./frontend/tsconfig.json:/app/tsconfig.json:cached
      - ./frontend/postcss.config.js:/app/postcss.config.js:cached
      - ./shared:/app/shared:cached
      # Exclude node_modules from bind mount (use named volume)
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - CHOKIDAR_USEPOLLING=true  # For Windows/WSL file watching
      - WATCHPACK_POLLING=true    # Better file watching in containers
    restart: unless-stopped
    labels:
      - dev.academy.service=frontend
      - dev.academy.auto-restart=true

  backend:
    volumes:
      # Mount source code for hot reload
      - ./backend/app:/app/app:cached
      - ./backend/alembic:/app/alembic:cached
      - ./backend/alembic.ini:/app/alembic.ini:cached
      - ./backend/requirements.txt:/app/requirements.txt:cached
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - RELOAD=true
    restart: unless-stopped
    labels:
      - dev.academy.service=backend
      - dev.academy.auto-restart=true
    command: >
      sh -c "
        echo 'ðŸš€ Starting Academy Backend Development Server...' &&
        echo 'Waiting for database...' &&
        python -c 'import time; time.sleep(10)' &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting FastAPI with hot reload...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/app
      "

  # Development tools
  frontend-watcher:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app:cached
      - ./scripts:/scripts:cached
      - /var/run/docker.sock:/var/run/docker.sock  # Access Docker daemon
    environment:
      - NODE_ENV=development
    command: >
      sh -c "
        echo 'ðŸ‘€ Starting Frontend File Watcher...' &&
        apk add --no-cache docker-cli &&
        while inotifywait -r -e modify,create,delete,move /app/src /app/public /app/*.json /app/*.js 2>/dev/null; do
          echo 'ðŸ”„ Frontend changes detected, restarting container...' &&
          docker compose restart frontend || true &&
          sleep 2
        done
      "
    profiles:
      - watcher
    depends_on:
      - frontend

volumes:
  frontend_node_modules:

networks:
  default:
    name: academy_dev_network