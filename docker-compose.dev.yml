version: '3.8'

# Development-specific Docker Compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: academy_db_dev
      POSTGRES_USER: academy_user
      POSTGRES_PASSWORD: academy_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/dev-seed.sql:/docker-entrypoint-initdb.d/99-dev-seed.sql

  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - DATABASE_URL=postgresql://academy_user:academy_password@postgres:5432/academy_db_dev
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - ENABLE_DOCS=true
      - ENABLE_ADMIN_OVERRIDE=true
    volumes:
      - ./backend:/app
      - /app/venv
    command: >
      sh -c "
        python -m alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NODE_ENV=development
      - NEXT_PUBLIC_DEBUG=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Development tools
  mailhog:
    image: mailhog/mailhog:latest
    container_name: academy_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local