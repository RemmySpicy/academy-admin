version: '3.8'

services:
  db:
    image: postgres:15-alpine
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8001"
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - ./backend/alembic.ini:/app/alembic.ini
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        python -c 'import time; time.sleep(10)' &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/next.config.js:/app/next.config.js
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./shared:/app/shared  # Shared resources for all apps
    env_file:
      - .env.docker
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Mobile Apps Development Services
  tutor-mobile:
    build:
      context: ./apps/tutor-mobile
      dockerfile: Dockerfile.dev
    ports:
      - "19006:19006"  # Expo Metro bundler
      - "8081:8081"    # Expo dev tools
    volumes:
      - ./apps/tutor-mobile:/app
      - ./shared:/app/shared
      - tutor_node_modules:/app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - API_BASE_URL=http://backend:8001/api/v1
      - WS_BASE_URL=ws://backend:8001/ws
    env_file:
      - .env.docker
    depends_on:
      backend:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        npm install &&
        echo 'Syncing shared resources...' &&
        cp -r /app/shared/* /app/src/shared/ 2>/dev/null || true &&
        echo 'Starting Expo development server...' &&
        npx expo start --tunnel
      "

  student-mobile:
    build:
      context: ./apps/student-mobile
      dockerfile: Dockerfile.dev
    ports:
      - "19007:19006"  # Expo Metro bundler (different port)
      - "8082:8081"    # Expo dev tools (different port)
    volumes:
      - ./apps/student-mobile:/app
      - ./shared:/app/shared
      - student_node_modules:/app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - API_BASE_URL=http://backend:8001/api/v1
      - WS_BASE_URL=ws://backend:8001/ws
    env_file:
      - .env.docker
    depends_on:
      backend:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        npm install &&
        echo 'Syncing shared resources...' &&
        cp -r /app/shared/* /app/src/shared/ 2>/dev/null || true &&
        echo 'Starting Expo development server...' &&
        npx expo start --tunnel
      "

  # Development Tools
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - db
    profiles:
      - tools

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    profiles:
      - cache

volumes:
  postgres_data:
  redis_data:
  tutor_node_modules:
  student_node_modules: